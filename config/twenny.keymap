#include "fingermap.h"
#include <behaviors/rgbled_widget.dtsi>
#include <behaviors/num_word.dtsi>
#include <behaviors/unicode.dtsi>

/ {
	behaviors {
		hml: home_row_mod_left {
            hold-trigger-key-positions = <3 4 5 10 11 12 13 16 17 19>; // List of keys on the right
        };
        hmr: home_row_mod_right {
            hold-trigger-key-positions = <0 1 2 6 7 8 9 14 15 18>; // List of keys on the left
        };
		uc: unicode {
  			default-mode = <UC_MODE_WIN_COMPOSE>;
		};
		num_word: num_word {
        	#binding-cells = <0>;
		    compatible = "zmk,behavior-num-word";
			layers = <1>;
        	continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
        	ignore-numbers;
    	};
		amt: a_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
            display-name = "a-Mod-Tap";
        };
		sl {
    		release-after-ms = <1500>;
		};
		mage_rep: mage_rep {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&key_repeat>;

            akt_dge { trigger-keys = <D>; max-prior-idle-ms = <300>; bindings = <&ge>; };
            akt_cl { trigger-keys = <C>; max-prior-idle-ms = <300>; bindings = <&kp L>; };
			akt_ax { trigger-keys = <A>; max-prior-idle-ms = <300>; bindings = <&kp X>; };
            akt_ax { trigger-keys = <L>; max-prior-idle-ms = <300>; bindings = <&kp W>; };
        };
		mage_g: mage_g {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&kp G>;

            akt_ck { trigger-keys = <C>; max-prior-idle-ms = <300>; bindings = <&kp K>; };
            akt_mp { trigger-keys = <M>; max-prior-idle-ms = <300>; bindings = <&kp P>; };
			akt_xp { trigger-keys = <X>; max-prior-idle-ms = <300>; bindings = <&kp P>; };
            akt_yi { trigger-keys = <Y>; max-prior-idle-ms = <300>; bindings = <&kp I>; };
			akt_lk { trigger-keys = <L>; max-prior-idle-ms = <300>; bindings = <&kp K>; };
        };
        mage_c: mage_m {
            compatible = "zmk,behavior-adaptive-key";
            #binding-cells = <0>;
            bindings = <&kp M>;

            akt_pt { trigger-keys = <P>; max-prior-idle-ms = <300>; bindings = <&kp T>; };
            };
	};

	keymap {
		compatible = "zmk,keymap";
		zero {
			display-name = "zero - base";
			bindings = <
							  &kp Y   	  &oamt 0 O   &uemt 0 U			&kp D 		 &kp L 		 &kp F 
				&hml LSHIFT H &hml LALT I &hml LGUI A &hml LCTRL E 		&hmr RCTRL T &hmr RGUI C &hmr RALT S &hmr RSHIFT N
										  &kp X 	  &mage_rep			&mage_g 		 &mage_m
													  &lt 2 R 			&lt 1 SPACE
			>;
		};
		one { 
			display-name = "one - num/ico";
			bindings = <
					   		   &amt LS(N3) LS(N5) &amt LS(N6) LS(N2) &amt MINUS LS(EQUAL) 			&parmt 0 0 &brcmt 0 0 &bktmt 0 0
						&amt LS(MINUS) N4 &amt LS(N7) N3 &amt EQUAL N2 &quomt 0 N1					&amt APOS N5 &amt LS(N8) N6 &amt LS(N1) N7 &amt LS(FSLH) N8
					   		  &amt LS(N4) N9 &amt SEMI COMMA									&amt LS(SEMI) DOT &amt BSLH FSLH
											   &amt LS(GRAVE) N0										&kp SPACE 
			>;
		};
		two { 
			display-name = "two - nav/fn";
			bindings = <
					 	 &ind_bat &none &none 				&kp C_PREV &kp C_NEXT &none
				&kp C_PP &kp LEFT &kp UP &kp RIGHT 			&kp HOME &kp PGUP &kp END &kp C_PP
						 	  	  &kp DOWN &none 			&none &kp PGDN
							  	   		   &none			&none
			>;
		};
		three { 
			display-name = "three - shortcuts";
			bindings = <
							  &kp LC(X) &kp LC(C) &kp LC(V) 		&mt F7 F1 &mt F8 F2 &mt F9 F3  
				    &kp PSCRN &kp LC(A) &kp LC(W) &kp LC(T) 		&mt F10 F4 &mt F11 F5 &mt F12 F6 &sk LSHIFT
							  			&kp LC(Y) &kp LC(Z) 		&sk RCTRL &sk RALT
				                				  &none  	    	&kp SPACE
			>;
		};
		four { 
			display-name = "four - fps";
			bindings = <
				    	  &kp Q &kp F &kp E 		&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp LCTRL &kp A &kp W &kp D 		&kp F2 		 &kp F3 	  &kp F5 	 &kp F6 
				         	    &kp S &kp C 		&kp C_PREV 	 &kp C_NEXT 
				                	  &kp SPACE 	&kp C_PP
			>;
		};
		five { 
			display-name = "five - qwer";
			bindings = <
				      &kp N1 &kp N2 &kp N3 			&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp Q &kp W  &kp E  &kp R 			&kp F2 		 &kp F3 	  &kp F4 	 &kp F5 
				             &kp D  &kp F 			&kp C_PREV   &kp C_NEXT 
				                    &mt LCTRL N4 	&kp C_PP
			>;
		};
		six { 
			display-name = "six - voipslop";
			bindings = <
				     	   &kp N1 &kp N2 &kp N3 			&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp LSHIFT &kp A  &kp W  &kp D 				&kp F2 		 &kp F3 	  &kp F5 	 &kp F6 
				           		  &kp S  &kp LCTRL 			&kp C_PREV 	 &kp C_NEXT 
				                  		 &lt 6 SPACE 		&kp C_PP
			>;
		};
		seven { 
			display-name = "seven - voipslop 2";
			bindings = <
					  &kp Q &none &kp E &none &none &none 
				&none &none &none &none &none &none &none &none 
					 	    &none &none &none &none 
								  &none &none 
			>;
		};
	};
};

/ {
	combos {
		compatible = "zmk,combos";

// alphas ----------------------------------------
		combo_qu {
			timeout-ms = <17>;
			key-positions = <16 17>;
			bindings = <&qumt Q 0>;
			layers = <0>;
		};
		combo_ju {
			timeout-ms = <30>;
			key-positions = <2 9>;
			bindings = <&jumt J 0>;
			layers = <0>;
		};
		combo_ze {
			timeout-ms = <30>;
			key-positions = <9 15>;
			bindings = <&zemt Z 0>;
			layers = <0>;
		};
		combo_k {
			timeout-ms = <30>;
			key-positions = <11 17>;
			bindings = <&kp K>;
			layers = <0>;
		};
		combo_v {
			timeout-ms = <30>;
			key-positions = <5 12>;
			bindings = <&kp V>;
			layers = <0>;
		};
		combo_p {
			timeout-ms = <30>;
			key-positions = <3 10>;
			bindings = <&kp P>;
			layers = <0>;
		};
		combo_b {
			timeout-ms = <30>;
			key-positions = <10 16>;
			bindings = <&kp B>;
			layers = <0>;
		};
		combo_w {
			timeout-ms = <30>;
			key-positions = <4 11>;
			bindings = <&kp W>;
			layers = <0>;
		};

// mods ------------------------------------------
		combo_enter {
			timeout-ms = <50>;
			key-positions = <9 10>;
			bindings = <&kp ENTER>;
			layers = <0 1 2>;
		};
		combo_del { //del
			timeout-ms = <50>;
			key-positions = <6 7>;
			bindings = <LHO>;
			layers = <0 1 2>;
		};
		combo_tab { //tab
			timeout-ms = <50>;
			key-positions = <0 2>;
			bindings = <LUO>;
		};
		combo_esc { //esc
			timeout-ms = <50>;
			key-positions = <3 5>;
			bindings = <RUO>;
		};
		combo_backspace { //back
			timeout-ms = <50>;
			key-positions = <12 13>;
			bindings = <&cbspc>;
			layers = <0 1 2>;
		};
		combo_left_back {
			timeout-ms = <50>;
			key-positions = <6 8>;
			bindings = <&cbspc>;
			layers = <0 1 2>;
		};
		combo_left_enter {
			timeout-ms = <50>;
			key-positions = <7 8>;
			bindings = <&kp ENTER>;
			layers = <0 1 2>;
		};
		combo_left_esc {
			timeout-ms = <50>;
			key-positions = <0 9>;
			bindings = <&kp ESC>;
			layers = <0 1 2>;
		};
		combo_right_del {
			timeout-ms = <50>;
			key-positions = <11 13>;
			bindings = <&kp DEL>;
			layers = <0 1 2>;
		};
		combo_right_enter {
			timeout-ms = <50>;
			key-positions = <11 12>;
			bindings = <&kp ENTER>;
			layers = <0 1 2>;
		};
		combo_right_tab {
			timeout-ms = <50>;
			key-positions = <5 10>;
			bindings = <&kp TAB>;
			layers = <0 1 2>;
		};


// symbols ----------------------------------------

		combo_uni_up {
			timeout-ms = <50>;
			key-positions = <8 11>;
			bindings = <&uc 0x2191 0x2191>;
			layers = <1>;
		};
		combo_uni_left {
			timeout-ms = <50>;
			key-positions = <7 10>;
			bindings = <&uc 0x2190 0x2190>;
			layers = <1>;
		};
		combo_uni_down {
			timeout-ms = <50>;
			key-positions = <14 17>;
			bindings = <&uc 0x2193 0x2193>;
			layers = <1>;
		};
		combo_uni_right {
			timeout-ms = <50>;
			key-positions = <9 12>;
			bindings = <&uc 0x2192 0x2192>;
			layers = <1>;
		};

// arrows ----------------------------------------
		combo_up {
			timeout-ms = <50>;
			key-positions = <8 11>;
			bindings = <&kp UP>;
			layers = <0>;
		};
		combo_left {
			timeout-ms = <50>;
			key-positions = <7 10>;
			bindings = <&kp LEFT>;
			layers = <0>;
		};
		combo_down {
			timeout-ms = <50>;
			key-positions = <14 17>;
			bindings = <&kp DOWN>;
			layers = <0>;
		};
		combo_right {
			timeout-ms = <50>;
			key-positions = <9 12>;
			bindings = <&kp RIGHT>;
			layers = <0>;
		};

// layers ----------------------------------------
		combo_left_shortcut_layer {
			timeout-ms = <25>;
			key-positions = <6 9>;
			bindings = <&sl 3>;
			layers = <0>;
		};
		combo_right_shortcut_layer {
			timeout-ms = <25>;
			key-positions = <10 13>;
			bindings = <&sl 3>;
			layers = <0>;
		};
		combo_default_layer {
			timeout-ms = <50>;
			key-positions = <8 9 10 11>;
			bindings = <&to 0>;
		};
		combo_fps_layer {
			timeout-ms = <50>;
			key-positions = <7 8 9>;
			bindings = <&to 4>;
			layers = <0>;
		};
		combo_qwer_layer {
			timeout-ms = <50>;
			key-positions = <6 7 9>;
			bindings = <&to 5>;
			layers = <0>;
		};
		combo_voipslop_layer {
			timeout-ms = <50>;
			key-positions = <0 1 2 3 4 5>;
			bindings = <&to 6>;
			layers = <0>;
		};

// shortcut -------------------------------------- 
		combo_ctrl_shft_t {
			timeout-ms = <50>;
			key-positions = <2 9>;
			bindings = <&kp LC(LS(T))>;
			layers = <3>;
		};
		combo_ctrl_x {
			timeout-ms = <50>;
			key-positions = <9 15>;
			bindings = <&kp LC(X)>;
			layers = <3>;
		};

// special --------------------------------------- 
		combo_numword {
			timeout-ms = <50>;
			key-positions = <0 18>;
			bindings = <&num_word>;
			layers = <0>;
		};
		combo_capsword {
			timeout-ms = <50>;
			key-positions = <5 19>;
			bindings = <&cmt CAPS 0>;
			layers = <0>;
		};
		combo_right_stickyshift {
			timeout-ms = <30>;
			key-positions = <10 11>;
			bindings = <&sk LSHIFT>;
			layers = <0>;
		};
		combo_left_stickyshift {
			timeout-ms = <30>;
			key-positions = <8 9>;
			bindings = <&sk LSHIFT>;
			layers = <0>;
		};

// keyboard --------------------------------------
		combo_softoff_left {
			timeout-ms = <25>;
			key-positions = <6 7 8 9>;
			bindings = <&hw_soft_off>;
			layers = <0>;
		};
		combo_softoff_right {
			timeout-ms = <25>;
			key-positions = <10 11 12 13>;
			bindings = <&hw_soft_off>;
			layers = <0>;
		};

// game ------------------------------------------
		combo_1_game {
			timeout-ms = <50>;
			key-positions = <0 18>;
			bindings = <&kp N1>;
			layers = <4 5>;
		};
		combo_2_game {
			timeout-ms = <50>;
			key-positions = <1 18>;
			bindings = <&kp N2>;
			layers = <4 5>;
		};
		combo_3_game {
			timeout-ms = <50>;
			key-positions = <2 18>;
			bindings = <&kp N3>;
			layers = <4 5>;
		};
		combo_4_fps {
			timeout-ms = <50>;
			key-positions = <7 8 9>;
			bindings = <&kp N4>;
			layers = <4 6>;
		};
		combo_b_g_game {
			timeout-ms = <50>;
			key-positions = <14 15>;
			bindings = <&mt B G>;
			layers = <4 5>;
		};
		combo_e_game {
			timeout-ms = <50>;
			key-positions = <14 15>;
			bindings = <&kp E>;
			layers = <6 7>;
		};
		combo_k_game {
			timeout-ms = <50>;
			key-positions = <6 18>;
			bindings = <&mt K LSHIFT>;
			layers = <4>;
		};
		combo_r_game {
			timeout-ms = <50>;
			key-positions = <1 2>;
			bindings = <&kp R>;
			layers = <4>;
		};
		combo_x_game {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp X>;
			layers = <4>;
		};
		combo_y_game {
			timeout-ms = <50>;
			key-positions = <6 18>;
			bindings = <&kp Y>;
			layers = <5>;
		};
		combo_esc_game {
			timeout-ms = <50>;
			key-positions = <0 1 2>;
			bindings = <&kp ESC>;
			layers = <4>;
		};
	};
};
