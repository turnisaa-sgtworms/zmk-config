#include "fingermap.h"
#include <behaviors/rgbled_widget.dtsi>
#include <behaviors/num_word.dtsi>

/ {
	behaviors {
		hml: home_row_mod_left {
            hold-trigger-key-positions = <3 4 5 10 11 12 13 16 17 19>; // List of keys on the right
        };
        hmr: home_row_mod_right {
            hold-trigger-key-positions = <0 1 2 6 7 8 9 14 15 18>; // List of keys on the left
        };		
		num_word: num_word {
        	#binding-cells = <0>;
		    compatible = "zmk,behavior-num-word";
        	layers = <1>;
        	continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
        	ignore-numbers;
    	};
		qumt: qu_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
            bindings = <&kp>, <&qu>;
            display-name = "qu Mod-Tap";
        };
		zemt: ze_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings = <&kp>, <&ze>;
            display-name = "ze Mod-Tap";
        };
		jumt: ju_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings = <&kp>, <&ju>;
            display-name = "ju Mod-Tap";
        };
		oamt: oa_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings = <&oa>, <&kp>;
            display-name = "oa Mod-Tap";
        };
		uemt: ue_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings = <&ue>, <&kp>;
            display-name = "ue Mod-Tap";
        };
		xpmt: xp_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <150>;
            bindings = <&xp>, <&kp>;
            display-name = "xp Mod-Tap";
        };
		cbspc: ctrl_back {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp LC(BSPC)>, <&kp BSPC>;
            mods = <(MOD_LSFT|MOD_RCTL|MOD_LCTL)>;
        };
	};

	keymap {
		compatible = "zmk,keymap";
		zero {
			display-name = "zero - base";
			bindings = <
							  &kp Y   &oamt 0 O   &uemt 0 U 			&kp D 		 &kp F 		 &kp L 
				&lt 3 C &hml LGUI I &hml LALT A &hml LCTRL E 		&hmr RCTRL T &hmr RALT S &hmr RGUI H &hmr RSHIFT N
										  &kp X 	  &zemt Z 0 			&kp P 		 &kp M 
													  &lt 2 R 			&lt 1 SPACE
			>;
		};
		one { 
			display-name = "one - num/ico";
			bindings = <
					   AS(N5) AS(N7) 		   AS(N6) 			&mt RPAR LPAR &mt RBRC LBRC &mt RBKT LBKT
				AS(N4) AS(N3) AS(N2) 		   AS(N1) 			AS(SEMI) 	  AS(APOS) 		&mt COMMA DOT &mt LS(BSLH) LS(FSLH)
					   		  &mt LS(GRAVE) N9 AS(N8) 			&mt BSLH FSLH RAS(MINUS) 
											   &mt GRAVE N0		&kp SPACE 
			>;
		};
		two { 
			display-name = "two - nav/fn";
			bindings = <
					 &ind_bat LUM2 LUI2 	RUI2 RUM2 RUR2
				LHP2 LHR2	  LHM2 LHI2 	RHI2 RHM2 RHR2 RHP2
						 	  LBM2 LBI2 	RBI2 RBM2
							  	   L2 		R2
			>;
		};
		three { 
			display-name = "three - shortcuts";
			bindings = <
				    	  &kp LA(TAB) &kp LC(Z) &kp LC(Y) 		&mt F7 F1 &mt F8 F2 &mt F9 F3  
				    &none &kp LC(W) &kp LC(A) &kp LC(T) 		&mt F10 F4 &mt F11 F5 &mt F12 F6 &sk RSHIFT
							    &kp LC(X) &kp LC(C) 		&sk RCTRL &sk RALT
				                	  &kp LC(V)	    &kp SPACE
			>;
		};
		four { 
			display-name = "four - fps";
			bindings = <
				    	  &kp Q &kp F &kp E 		&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp LCTRL &kp A &kp W &kp D 		&kp F2 		 &kp F3 	  &kp F5 	 &kp F6 
				         	    &kp S &kp C 		&kp C_PREV 	 &kp C_NEXT 
				                	  &kp SPACE 	&kp C_PP
			>;
		};
		five { 
			display-name = "five - qwer";
			bindings = <
				      &kp N1 &kp N2 &kp N3 			&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp Q &kp W  &kp E  &kp R 			&kp F2 		 &kp F3 	  &kp F4 	 &kp F5 
				             &kp D  &kp F 			&kp C_PREV   &kp C_NEXT 
				                    &mt LCTRL N4 	&kp C_PP
			>;
		};
		six { 
			display-name = "six - voipslop";
			bindings = <
				     	   &kp N1 &kp N2 &kp N3 			&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp LSHIFT &kp A  &kp W  &kp D 				&kp F2 		 &kp F3 	  &kp F5 	 &kp F6 
				           		  &kp S  &kp LCTRL 			&kp C_PREV 	 &kp C_NEXT 
				                  		 &lt 6 SPACE 		&kp C_PP
			>;
		};
		seven { 
			display-name = "seven - voipslop 2";
			bindings = <
					  &kp Q &none &kp E &none &none &none 
				&none &none &none &none &none &none &none &none 
					 	    &none &none &none &none 
								  &none &none 
			>;
		};
	};
};

/ {
	combos {
		compatible = "zmk,combos";

// alphas ----------------------------------------
		combo_qu {
			timeout-ms = <30>;
			key-positions = <2 9>;
			bindings = <&qumt Q 0>;
			layers = <0>;
		};
		combo_ju {
			timeout-ms = <30>;
			key-positions = <9 15>;
			bindings = <&jumt J 0>;
			layers = <0>;
		};
		combo_g {
			timeout-ms = <30>;
			key-positions = <11 17>;
			bindings = <&kp G>;
			layers = <0>;
		};
		combo_v {
			timeout-ms = <30>;
			key-positions = <3 10>;
			bindings = <&kp V>;
			layers = <0>;
		};
		combo_k {
			timeout-ms = <30>;
			key-positions = <10 16>;
			bindings = <&kp K>;
			layers = <0>;
		};
		combo_b {
			timeout-ms = <30>;
			key-positions = <5 12>;
			bindings = <&kp B>;
			layers = <0>;
		};
		combo_w {
			timeout-ms = <30>;
			key-positions = <4 11>;
			bindings = <&kp W>;
			layers = <0>;
		};

// symbols ---------------------------------------
		combo_abrack {
			timeout-ms = <50>;
			key-positions = <3 10>;
			bindings = <&mt LS(DOT) LS(COMMA)>;
			layers = <1>;
		};
		combo_equal {
			timeout-ms = <50>;
			key-positions = <10 16>;
			bindings = <AS(EQUAL)>;
			layers = <1>;
		};

// mods ------------------------------------------
		combo_enter {
			timeout-ms = <50>;
			key-positions = <9 10>;
			bindings = <&kp ENTER>;
			layers = <0 1 2>;
		};
		combo_del { //del
			timeout-ms = <50>;
			key-positions = <6 7>;
			bindings = <LHO>;
			layers = <0 1 2>;
		};
		combo_tab { //tab
			timeout-ms = <50>;
			key-positions = <0 2>;
			bindings = <LUO>;
		};
		combo_esc { //esc
			timeout-ms = <50>;
			key-positions = <3 5>;
			bindings = <RUO>;
		};
		combo_backspace { //back
			timeout-ms = <50>;
			key-positions = <12 13>;
			bindings = <&cbspc>;
			layers = <0 1 2>;
		};
		combo_left_back {
			timeout-ms = <50>;
			key-positions = <6 8>;
			bindings = <&cbspc>;
			layers = <0 1 2>;
		};
		combo_left_enter {
			timeout-ms = <50>;
			key-positions = <6 9>;
			bindings = <&kp ENTER>;
			layers = <0 1 2>;
		};
		combo_left_esc {
			timeout-ms = <50>;
			key-positions = <0 9>;
			bindings = <&kp ESC>;
			layers = <0 1 2>;
		};
		combo_right_del {
			timeout-ms = <50>;
			key-positions = <11 13>;
			bindings = <&kp DEL>;
			layers = <0 1 2>;
		};
		combo_right_enter {
			timeout-ms = <50>;
			key-positions = <10 13>;
			bindings = <&kp ENTER>;
			layers = <0 1 2>;
		};
		combo_right_tab {
			timeout-ms = <50>;
			key-positions = <5 10>;
			bindings = <&kp TAB>;
			layers = <0 1 2>;
		};

// arrows ----------------------------------------
		combo_up {
			timeout-ms = <50>;
			key-positions = <8 11>;
			bindings = <&kp UP>;
		};
		combo_left {
			timeout-ms = <50>;
			key-positions = <7 10>;
			bindings = <&kp LEFT>;
		};
		combo_down {
			timeout-ms = <50>;
			key-positions = <14 17>;
			bindings = <&kp DOWN>;
		};
		combo_right {
			timeout-ms = <50>;
			key-positions = <9 12>;
			bindings = <&kp RIGHT>;
		};

// layers ----------------------------------------
		combo_default_layer {
			timeout-ms = <50>;
			key-positions = <8 9 10 11>;
			bindings = <&to 0>;
		};
		combo_fps_layer {
			timeout-ms = <50>;
			key-positions = <7 8 9>;
			bindings = <&to 4>;
			layers = <0>;
		};
		combo_qwer_layer {
			timeout-ms = <50>;
			key-positions = <6 7 9>;
			bindings = <&to 5>;
			layers = <0>;
		};
		combo_voipslop_layer {
			timeout-ms = <50>;
			key-positions = <0 1 2 3 4 5>;
			bindings = <&to 6>;
			layers = <0>;
		};

// shortcut -------------------------------------- 
		combo_ctrl_shft_t {
			timeout-ms = <50>;
			key-positions = <2 9>;
			bindings = <&kp LC(LS(T))>;
			layers = <3>;
		};
		combo_ctrl_x {
			timeout-ms = <50>;
			key-positions = <9 15>;
			bindings = <&kp LC(X)>;
			layers = <3>;
		};

// special --------------------------------------- 
		combo_numword {
			timeout-ms = <50>;
			key-positions = <0 18>;
			bindings = <&num_word>;
			layers = <0>;
		};
		combo_capsword {
			timeout-ms = <50>;
			key-positions = <5 19>;
			bindings = <&cmt CAPS 0>;
			layers = <0>;
		};
		combo_right_stickyshift {
			timeout-ms = <50>;
			key-positions = <13 19>;
			bindings = <&sk LSHIFT>;
			layers = <0>;
		};
		combo_left_stickyshift {
			timeout-ms = <50>;
			key-positions = <6 18>;
			bindings = <&sk LSHIFT>;
			layers = <0>;
		};

// keyboard --------------------------------------
		combo_bt_zero {
			timeout-ms = <50>;
			key-positions = <6 7 8 9>;
			bindings = <&bluetooth0>;
			layers = <0>;
		};
		combo_bt_one {
			timeout-ms = <50>;
			key-positions = <10 11 12 13>;
			bindings = <&bluetooth1>;
			layers = <0>;
		};
		combo_usb {
			timeout-ms = <50>;
			key-positions = <14 15 16 17>;
			bindings = <&out OUT_USB>;
			layers = <0>;
		};

// game ------------------------------------------
		combo_1_game {
			timeout-ms = <50>;
			key-positions = <0 18>;
			bindings = <&kp N1>;
			layers = <4 5>;
		};
		combo_2_game {
			timeout-ms = <50>;
			key-positions = <1 18>;
			bindings = <&kp N2>;
			layers = <4 5>;
		};
		combo_3_game {
			timeout-ms = <50>;
			key-positions = <2 18>;
			bindings = <&kp N3>;
			layers = <4 5>;
		};
		combo_4_fps {
			timeout-ms = <50>;
			key-positions = <7 8 9>;
			bindings = <&kp N4>;
			layers = <4 6>;
		};
		combo_b_g_game {
			timeout-ms = <50>;
			key-positions = <14 15>;
			bindings = <&mt B G>;
			layers = <4 5>;
		};
		combo_e_game {
			timeout-ms = <50>;
			key-positions = <14 15>;
			bindings = <&kp E>;
			layers = <6 7>;
		};
		combo_k_game {
			timeout-ms = <50>;
			key-positions = <6 18>;
			bindings = <&mt K LSHIFT>;
			layers = <4>;
		};
		combo_r_game {
			timeout-ms = <50>;
			key-positions = <1 2>;
			bindings = <&kp R>;
			layers = <4>;
		};
		combo_x_game {
			timeout-ms = <50>;
			key-positions = <0 1>;
			bindings = <&kp X>;
			layers = <4>;
		};
		combo_y_game {
			timeout-ms = <50>;
			key-positions = <6 18>;
			bindings = <&kp Y>;
			layers = <5>;
		};
		combo_esc_game {
			timeout-ms = <50>;
			key-positions = <0 1 2>;
			bindings = <&kp ESC>;
			layers = <4>;
		};
	};
};
