#include "fingermap.h"
#include <behaviors/rgbled_widget.dtsi>
#include <behaviors/num_word.dtsi>

/ {
	behaviors {
		hml: home_row_mod_left {
            		hold-trigger-key-positions = <3 4 5 10 11 12 13 16 17 19>; // List of keys on the right
        	};
        	hmr: home_row_mod_right {
            		hold-trigger-key-positions = <0 1 2 6 7 8 9 14 15 18>; // List of keys on the left
        	};		
		l_num_word: left_num_word {
        		#binding-cells = <0>;
		        compatible = "zmk,behavior-num-word";
        		layers = <1>;
        		continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
        		ignore-numbers;
    		};
		r_num_word: right_num_word {
        		#binding-cells = <0>;
		        compatible = "zmk,behavior-num-word";
        		layers = <2>;
        		continue-list = <BSPC DEL DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
        		ignore-numbers;
    		};
		qumt: qu_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <175>;
            bindings = <&kp>, <&qu>;
            display-name = "qu Mod-Tap";
        };
		zemt: ze_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <175>;
            bindings = <&kp>, <&ze>;
            display-name = "ze Mod-Tap";
        };
		jumt: ju_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <175>;
            bindings = <&kp>, <&ju>;
            display-name = "ju Mod-Tap";
        };
		oamt: oa_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
            bindings = <&oa>, <&kp>;
            display-name = "oa Mod-Tap";
        };
		uemt: ue_mod_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <150>;
            bindings = <&ue>, <&kp>;
            display-name = "ue Mod-Tap";
        };
	};

	keymap {
		compatible = "zmk,keymap";
		zero {
			display-name = "zero - base";
			bindings = <
				&uemt 0 U &oamt 0 O &kp D &kp G &kp F &kp L 
				&hml LSHIFT I &hml LGUI E &hml LALT A &hml LCTRL T &hmr RCTRL C &hmr RALT S &hmr RGUI M &hmr RSHIFT N
				&kp Y &kp K &kp W &kp H 
				&lt 2 R &lt 1 SPACE
			>;
		};
		one { 
			display-name = "one - numico";
			bindings = <
				AS(N5) AS(N7) AS(N6) 		&mt RPAR LPAR &mt RBRC LBRC &mt RBKT LBKT
				AS(N4) AS(N3) AS(N2) AS(N1) 	AS(SEMI) AS(COMMA) AS(DOT) AS(FSLH) 
				AS(N9) AS(N8) 			AS(APOS) AS(MINUS) 
				&lt 2 N0 			&none 
			>;
		};
		two { 
			display-name = "two - numico mirror";
			bindings = <
				&mt RBKT LBKT &mt RBRC LBRC &mt RPAR LPAR 	AS(N6) AS(N7) AS(N5) 
				AS(FSLH) AS(DOT) AS(COMMA) AS(SEMI)		AS(N1) AS(N2) AS(N3) AS(N4) 
				AS(MINUS) AS(APOS) 				AS(N8) AS(N9) 
				&none 						&lt 1 N0
			>;
		};
		three { 
			display-name = "three - navigation and kb functions";
			bindings = <
				&ind_bat LUM2 LUI2 RUI2 RUM2 RUR2
				LHP2 LHR2 LHM2 LHI2 RHI2 RHM2 RHR2 RHP2
				LBM2 LBI2 		RBI2 RBM2
				L2 			R2
			>;
		};
		four { 
			display-name = "four - placeholder";
			bindings = <
				     &none &none &none &none &none &none 
				&none &none &none &none &none &none &none &none 
					&none &to 4 &none &none 
						&none &none 
			>;
		};
		five { 
			display-name = "five - voipslop";
			bindings = <
				     &kp N1 &kp N2 &kp N3 			&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp LSHIFT &kp A &kp W &kp D 			&kp F2 &kp F3 &kp F5 &kp F6 
				           &kp S &kp LCTRL 			&kp C_PREV &kp C_NEXT 
				                &lt 6 SPACE 			&kp C_PP
			>;
		};
		six { 
			display-name = "six - voipslop2";
			bindings = <
				     &kp Q &none &kp E &none &none &none 
				&none &none &none &none &none &none &none &none 
					&none &none &none &none 
						&none &none 
			>;
		};
		seven { 
			display-name = "seven - fps more binds";
			bindings = <
				     &kp Q &td4 &kp E 				&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp LCTRL &kp A &kp W &kp D 		&kp F2 &kp F3 &kp F5 &kp F6 
				           &kp S &td5 				&kp C_PREV &kp C_NEXT 
				                &kp SPACE 			&kp C_PP
			>;
		};
		eight { 
			display-name = "eight - qwer";
			bindings = <
				      &kp N1 &kp N2 &kp N3 			&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp Q &kp W &kp E &kp R 			&kp F2 &kp F3 &kp F4 &kp F5 
				            &kp D &kp F 			&kp C_PREV &kp C_NEXT 
				                  &mt LCTRL N4 			&kp C_PP
			>;
		};
		nine { 
			display-name = "nine - fps fast binds";
			bindings = <
				     &kp Q &kp N4 &kp E 			&kp C_VOL_DN &kp C_VOL_UP &kp C_MUTE
				&kp LCTRL &kp A &kp W &kp D 			&kp F2 &kp F3 &kp F5 &kp F6 
				           &kp S &kp R 				&kp C_PREV &kp C_NEXT 
				                &kp SPACE 			&kp C_PP
			>;
		};
	};
};

/ {
	combos {
		compatible = "zmk,combos";
		combo_left_numword {
			timeout-ms = <30>;
			key-positions = <0 18>;
			bindings = <&l_num_word>;
			layers = <0>;
		};
		combo_right_numword {
			timeout-ms = <30>;
			key-positions = <5 19>;
			bindings = <&r_num_word>;
			layers = <0>;
		};
		combo_right_grave {
			timeout-ms = <90>;
			key-positions = <1 2>;
			bindings = <AS(GRAVE)>;
			layers = <2>;
		};
		combo_right_equal {
			timeout-ms = <90>;
			key-positions = <8 9>;
			bindings = <AS(EQUAL)>;
			layers = <2>;
		};
		combo_right_bslh {
			timeout-ms = <90>;
			key-positions = <14 15>;
			bindings = <AS(BSLH)>;
			layers = <2>;
		};
		combo_left_grave {
			timeout-ms = <90>;
			key-positions = <3 4>;
			bindings = <AS(GRAVE)>;
			layers = <1>;
		};
		combo_left_equal {
			timeout-ms = <90>;
			key-positions = <10 11>;
			bindings = <AS(EQUAL)>;
			layers = <1>;
		};
		combo_left_bslh {
			timeout-ms = <90>;
			key-positions = <16 17>;
			bindings = <AS(BSLH)>;
			layers = <1>;
		};
		combo_1_game {
			timeout-ms = <90>;
			key-positions = <0 18>;
			bindings = <&kp N1>;
			layers = <7 9>;
		};
		combo_2_game {
			timeout-ms = <90>;
			key-positions = <1 18>;
			bindings = <&kp N2>;
			layers = <7 9>;
		};
		combo_3_game {
			timeout-ms = <90>;
			key-positions = <2 18>;
			bindings = <&kp N3>;
			layers = <7 9>;
		};
		combo_4_game {
			timeout-ms = <90>;
			key-positions = <8 14>;
			bindings = <&kp N4>;
			layers = <5 6 7>;
		};
		combo_r_game {
			timeout-ms = <90>;
			key-positions = <1 8>;
			bindings = <&kp R>;
			layers = <5 6 7>;
		};
		combo_b_game {
			timeout-ms = <90>;
			key-positions = <14 15>;
			bindings = <&kp B>;
			layers = <7 8 9>;
		};
		combo_e_game {
			timeout-ms = <90>;
			key-positions = <14 15>;
			bindings = <&kp E>;
			layers = <5 6>;
		};
		combo_k_game {
			timeout-ms = <90>;
			key-positions = <6 18>;
			bindings = <&mt LSHIFT K>;
			layers = <7 8 9>;
		};
		combo_y_game {
			timeout-ms = <90>;
			key-positions = <6 18>;
			bindings = <&kp Y>;
			layers = <8>;
		};
		combo_bt_zero {
			timeout-ms = <50>;
			key-positions = <6 7 8 9>;
			bindings = <&bluetooth0>;
			layers = <0>;
		};
		combo_bt_one {
			timeout-ms = <50>;
			key-positions = <10 11 12 13>;
			bindings = <&bluetooth1>;
			layers = <0>;
		};
		combo_usb {
			timeout-ms = <50>;
			key-positions = <14 15 16 17>;
			bindings = <&out OUT_USB>;
			layers = <0>;
		};
		combo_val_layer {
			timeout-ms = <50>;
			key-positions = <7 8 9>;
			bindings = <&to 7>;
			layers = <0>;
		};
		combo_qwer_layer {
			timeout-ms = <50>;
			key-positions = <6 7 9>;
			bindings = <&to 8>;
			layers = <0>;
		};
		combo_apex_layer {
			timeout-ms = <50>;
			key-positions = <1 7 9>;
			bindings = <&to 9>;
			layers = <0>;
		};
		combo_voipslop_layer {
			timeout-ms = <50>;
			key-positions = <0 1 2 3 4 5>;
			bindings = <&to 5>;
			layers = <0>;
		};
		combo_defau_layer {
			timeout-ms = <50>;
			key-positions = <8 9 10 11>;
			bindings = <&to 0>;
		};
		combo_enter {
			timeout-ms = <50>;
			key-positions = <9 10>;
			bindings = <&kp ENTER>;
			layers = <0 1 2 3>;
		};
		combo_capsword {
			timeout-ms = <50>;
			key-positions = <6 13>;
			bindings = <&caps_word>;
			layers = <0>;
		};
		combo_up {
			timeout-ms = <50>;
			key-positions = <8 11>;
			bindings = <&kp UP>;
		};
		combo_left {
			timeout-ms = <50>;
			key-positions = <7 10>;
			bindings = <&kp LEFT>;
		};
		combo_down {
			timeout-ms = <50>;
			key-positions = <14 17>;
			bindings = <&kp DOWN>;
		};
		combo_right {
			timeout-ms = <50>;
			key-positions = <9 12>;
			bindings = <&kp RIGHT>;
		};
//formulated
		combo_lhp_lhr { //del
			timeout-ms = <50>;
			key-positions = <6 7>;
			bindings = <LHO>;
			layers = <0 1 2 3>;
		};
		combo_lur_lui { //tab
			timeout-ms = <50>;
			key-positions = <0 2>;
			bindings = <LUO>;
		};
		combo_rui_rur { //esc
			timeout-ms = <50>;
			key-positions = <3 5>;
			bindings = <RUO>;
		};
		combo_rhr_rhp { //back
			timeout-ms = <50>;
			key-positions = <12 13>;
			bindings = <RHO>;
			layers = <0 1 2 3>;
		};
		combo_left_back {
			timeout-ms = <50>;
			key-positions = <6 8>;
			bindings = <&kp BSPC>;
			layers = <0 1 2 3>;
		};
		combo_left_space {
			timeout-ms = <50>;
			key-positions = <2 18>;
			bindings = <&kp SPACE>;
			layers = <0 1 2 3>;
		};
		combo_left_enter {
			timeout-ms = <50>;
			key-positions = <6 9>;
			bindings = <&kp ENTER>;
			layers = <0 1 2 3>;
		};
		combo_left_esc {
			timeout-ms = <50>;
			key-positions = <0 9>;
			bindings = <&kp ESC>;
			layers = <0 1 2 3>;
		};
		combo_right_del {
			timeout-ms = <50>;
			key-positions = <11 13>;
			bindings = <&kp DEL>;
			layers = <0 1 2 3>;
		};
		combo_right_r {
			timeout-ms = <50>;
			key-positions = <3 19>;
			bindings = <&kp R>;
			layers = <0 1 2 3>;
		};
		combo_right_enter {
			timeout-ms = <50>;
			key-positions = <10 13>;
			bindings = <&kp ENTER>;
			layers = <0 1 2 3>;
		};
		combo_right_tab {
			timeout-ms = <50>;
			key-positions = <5 10>;
			bindings = <&kp TAB>;
			layers = <0 1 2 3>;
		};
		combo_right_layer3 {
			timeout-ms = <50>;
			key-positions = <13 19>;
			bindings = <&mo 3>;
			layers = <0>;
		};
		combo_left_layer3 {
			timeout-ms = <50>;
			key-positions = <6 18>;
			bindings = <&mo 3>;
			layers = <0>;
		};
		combo_qu {
			timeout-ms = <50>;
			key-positions = <0 6>;
			bindings = <&qumt Q 0>;
			layers = <0>;
		};
		combo_ju {
			timeout-ms = <65>;
			key-positions = <2 9>;
			bindings = <&jumt J 0>;
			layers = <0>;
		};
		combo_z {
			timeout-ms = <65>;
			key-positions = <9 15>;
			bindings = <&zemt Z 0>;
			layers = <0>;
		};
		combo_x {
			timeout-ms = <50>;
			key-positions = <5 13>;
			bindings = <&kp X>;
			layers = <0>;
		};
		combo_p {
			timeout-ms = <65>;
			key-positions = <3 10>;
			bindings = <&kp P>;
			layers = <0>;
		};
		combo_v {
			timeout-ms = <65>;
			key-positions = <10 16>;
			bindings = <&kp V>;
			layers = <0>;
		};
		combo_b {
			timeout-ms = <65>;
			key-positions = <11 17>;
			bindings = <&kp B>;
			layers = <0>;
		};
		combo_you {
			timeout-ms = <65>;
			key-positions = <1 2>;
			bindings = <&you>;
			layers = <0>;
		};
	};
};
